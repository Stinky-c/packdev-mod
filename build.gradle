plugins {
    id 'dev.architectury.loom' version '1.6-SNAPSHOT'
    id 'maven-publish'

}

group = project.maven_group
version = project.mod_version

base {
    archivesName = project.archives_name
}

loom {
    forge {
        mixinConfig 'packdev.mixins.json'
    }
}

repositories {

    maven {
        name = "Jared's maven"
        url = 'https://maven.blamejared.com'
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
    maven { url = "https://cursemaven.com" }
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        content {
            includeGroupByRegex("software\\.bernie.*")
            includeGroup("com.eliotlash.mclib")
        }
    }
    mavenCentral()
}

dependencies {

    if (!Boolean.getBoolean("idea.sync.active")) {
        annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
    }

    minecraft "net.minecraft:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${project.forge_version}"


    // These damn libraries
    modLocalRuntime "maven.modrinth:biomancy:${version_biomancy}"
    forgeRuntimeLibrary "com.h2database:h2-mvstore:2.2.224"
    modLocalRuntime "software.bernie.geckolib:geckolib-forge-${minecraft_version}:${version_geckolib}"
    forgeRuntimeLibrary "com.eliotlash.mclib:mclib:20"


    modLocalRuntime "maven.modrinth:blood-magic:${version_bloodmagic}"
    modLocalRuntime "vazkii.patchouli:Patchouli:${version_patchouli}"

    modLocalRuntime "maven.modrinth:jei:PeYsGsQy"
//    modLocalRuntime "mezz.jei:jei-${minecraft_version}-forge:${version_jei}"


    // API stuff
    modImplementation "maven.modrinth:biomancy:${version_biomancy}"

    modImplementation "maven.modrinth:blood-magic:${version_bloodmagic}"


}

processResources {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version       : forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors         : mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}


java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

// Configure Maven publishing.
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
